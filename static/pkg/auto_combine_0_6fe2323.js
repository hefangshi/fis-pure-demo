define("app/views/todos",function(require,exports,module){var Backbone,common,TodoView;Backbone=require("backbone"),common=require("common");var _=(require("jquery"),require("underscore"));TodoView=Backbone.View.extend({tagName:"li",template:function(obj){{var __t,__p="";Array.prototype.join}with(obj||{})__p+='<div class="view">\r\n    <input class="toggle" type="checkbox" '+(null==(__t=completed?"checked":"")?"":__t)+'>\r\n    <label class="icon_'+(null==(__t=Math.ceil(5*Math.random()))?"":_.escape(__t))+'">'+(null==(__t=title)?"":_.escape(__t))+'</label>\r\n    <button class="destroy"></button>\r\n</div>\r\n<input class="edit" value="'+(null==(__t=title)?"":_.escape(__t))+'">\r\n';return __p},events:{"click .toggle":"toggleCompleted","dblclick label":"edit","click .destroy":"clear","keypress .edit":"updateOnEnter","blur .edit":"close"},initialize:function(){this.listenTo(this.model,"change",this.render),this.listenTo(this.model,"destroy",this.remove),this.listenTo(this.model,"visible",this.toggleVisible)},render:function(){return this.$el.html(this.template(this.model.toJSON())),this.$el.toggleClass("completed",this.model.get("completed")),this.toggleVisible(),this.$input=this.$(".edit"),this},toggleVisible:function(){this.$el.toggleClass("hidden",this.isHidden())},isHidden:function(){var e=this.model.get("completed");return!e&&"completed"===common.TodoFilter||e&&"active"===common.TodoFilter},toggleCompleted:function(){this.model.toggle()},edit:function(){this.$el.addClass("editing"),this.$input.focus()},close:function(){var e=this.$input.val().trim();e?this.model.save({title:e}):this.clear(),this.$el.removeClass("editing")},updateOnEnter:function(e){e.which===common.ENTER_KEY&&this.close()},clear:function(){this.model.destroy()}}),module.exports=TodoView});
;define("app/models/todo",function(e,t,o){var d=e("backbone"),l=d.Model.extend({defaults:{title:"",completed:!1},toggle:function(){this.save({completed:!this.get("completed")})}});o.exports=l});
;define("app/collections/todos",function(e,t,o){var n,r,c;n=e("backbone"),e("vendor/backbone.localStorage");e("jquery"),e("underscore");r=e("app/models/todo"),c=n.Collection.extend({model:r,localStorage:new n.LocalStorage("todos-backbone"),completed:function(){return this.filter(function(e){return e.get("completed")})},remaining:function(){return this.without.apply(this,this.completed())},nextOrder:function(){return this.length?this.last().get("order")+1:1},comparator:function(e){return e.get("order")}}),o.exports=new c});
;define("app/views/app",function(require,exports,module){var Backbone,TodoView,todos,common,AppView,$=require("jquery"),_=require("underscore");Backbone=require("backbone"),common=require("common"),TodoView=require("app/views/todos"),todos=require("app/collections/todos"),AppView=Backbone.View.extend({el:"#todoapp",statsTemplate:function(obj){{var __t,__p="";Array.prototype.join}with(obj||{})__p+='<span id="todo-count"><strong>'+(null==(__t=remaining)?"":__t)+"</strong> "+(null==(__t=1===remaining?"item":"items")?"":__t)+' left</span>\r\n<ul id="filters">\r\n    <li>\r\n        <a class="selected" href="#/">All</a>\r\n    </li>\r\n    <li>\r\n        <a href="#/active">Active</a>\r\n    </li>\r\n    <li>\r\n        <a href="#/completed">Completed</a>\r\n    </li>\r\n</ul>\r\n',completed&&(__p+='\r\n<button id="clear-completed">Clear completed ('+(null==(__t=completed)?"":__t)+")</button>\r\n"),__p+="";return __p},events:{"keypress #new-todo":"createOnEnter","click #clear-completed":"clearCompleted","click #toggle-all":"toggleAllComplete"},initialize:function(){this.allCheckbox=this.$("#toggle-all")[0],this.$input=this.$("#new-todo"),this.$footer=this.$("#footer"),this.$main=this.$("#main"),this.listenTo(todos,"add",this.addOne),this.listenTo(todos,"reset",this.addAll),this.listenTo(todos,"change:completed",this.filterOne),this.listenTo(todos,"filter",this.filterAll),this.listenTo(todos,"all",this.render),todos.fetch()},render:function(){var e=todos.completed().length,t=todos.remaining().length;todos.length?(this.$main.show(),this.$footer.show(),this.$footer.html(this.statsTemplate({completed:e,remaining:t})),this.$("#filters li a").removeClass("selected").filter('[href="#/'+(common.TodoFilter||"")+'"]').addClass("selected")):(this.$main.hide(),this.$footer.hide()),this.allCheckbox.checked=!t},addOne:function(e){var t=new TodoView({model:e});$("#todo-list").append(t.render().el)},addAll:function(){this.$("#todo-list").html(""),todos.each(this.addOne,this)},filterOne:function(e){e.trigger("visible")},filterAll:function(){todos.each(this.filterOne,this)},newAttributes:function(){return{title:this.$input.val().trim(),order:todos.nextOrder(),completed:!1}},createOnEnter:function(e){e.which===common.ENTER_KEY&&this.$input.val().trim()&&(todos.create(this.newAttributes()),this.$input.val(""))},clearCompleted:function(){return _.invoke(todos.completed(),"destroy"),!1},toggleAllComplete:function(){var e=this.allCheckbox.checked;todos.each(function(t){t.save({completed:e})})}}),module.exports=AppView});
;define("app/routers/router",function(e,t,o){var r,i,n,l;r=e("backbone"),l=e("common"),n=e("app/collections/todos"),i=r.Router.extend({routes:{"*filter":"setFilter"},setFilter:function(e){l.TodoFilter=e&&e.trim()||"",n.trigger("filter")}}),o.exports=i});
;define("app/main",function(e){var n,a,r;n=e("backbone"),n.$=e("jquery"),r=e("app/views/app"),a=e("app/routers/router"),new a,n.history.start(),n.$(document).ready(function(){new r})});